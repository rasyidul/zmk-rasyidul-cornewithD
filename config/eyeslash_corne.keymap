#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    combos {
        compatible = "zmk,combos";

        Combo_LSHIFT {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <17 43>;
        };

        Combo_RSHIFT {
            bindings = <&kp RIGHT_SHIFT>;
            key-positions = <23 46>;
        };

        Combo_LCTRL {
            bindings = <&kp LCTRL>;
            key-positions = <16 43>;
        };

        Combo_RCTRL {
            bindings = <&kp RCTRL>;
            key-positions = <24 46>;
        };

        Combo_LALT {
            bindings = <&kp LALT>;
            key-positions = <15 43>;
        };

        Combo_RALT {
            bindings = <&kp RALT>;
            key-positions = <25 46>;
        };

        Combo_LCAPS {
            bindings = <&kp CAPSLOCK>;
            key-positions = <17 43 16>;
        };

        Combo_RCAPS {
            bindings = <&kp CAPSLOCK>;
            key-positions = <23 24 46>;
        };

        Combo_RTAB {
            bindings = <&kp TAB>;
            key-positions = <23 24 25>;
        };

        Combo_LTAB {
            bindings = <&kp TAB>;
            key-positions = <15 16 17>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp ESCAPE  &kp Q  &kp W  &kp E     &kp R  &kp T                             &kp UP                &kp Y      &kp U  &kp I          &kp O    &kp P     &kp BSPC
&kp DEL     &kp A  &kp S  &kp D     &kp F  &kp G                   &kp LEFT  &kp ENTER  &kp RIGHT  &kp H      &kp J  &kp K          &kp L    &kp SEMI  &kp SQT
&mo 3       &kp Z  &kp X  &kp C     &kp V  &kp B      &kp SPACE              &kp DOWN              &kp N      &kp M  &kp COMMA      &kp DOT  &kp FSLH  &mo 3
                          &kp LGUI  &mo 1  &kp SPACE                                               &kp ENTER  &mo 2  &kp RIGHT_GUI
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        lower_layer {
            display-name = "NUMBER";
            bindings = <
&bt BT_CLR_ALL   &rgb_ug RGB_HUI  &rgb_ug RGB_EFR  &kp UP_ARROW  &rgb_ug RGB_EFF  &rgb_ug RGB_BRI                                &mmv MOVE_UP                     &trans   &kp N7        &kp N8        &kp N9        &trans    &kp BSPC
&rgb_ug RGB_ON   &rgb_ug RGB_HUD  &kp LEFT_ARROW   &kp DOWN      &kp RIGHT        &rgb_ug RGB_BRD                &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp N0   &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp HOME  &kp PG_UP
&rgb_ug RGB_OFF  &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2  &bt BT_SEL 3     &bt BT_SEL 4     &kp C_MUTE                    &mmv MOVE_DOWN                   &trans   &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp END   &kp PG_DN
                                                   &trans        &trans           &trans                                                                          &kp INS  &kp DEL       &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        raise_layer {
            display-name = "SYMBOL";
            bindings = <
&trans  &kp EXCL      &kp AT        &kp HASH   &kp DLLR   &kp PRCNT                            &mmv MOVE_UP                     &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&trans  &bt BT_CLR    &mkp LCLK     &mkp MCLK  &mkp RCLK  &mkp MB4             &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&trans  &out OUT_USB  &out OUT_BLE  &none      &none      &mkp MB5   &trans                    &mmv MOVE_DOWN                   &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                                    &trans     &trans     &kp SPACE                                                             &kp RET    &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        FN {
            display-name = "Fn";
            bindings = <
&studio_unlock  &kp F1      &kp F2     &kp F3       &kp F4     &kp F5                                  &mmv MOVE_UP                     &kp F6       &kp F7     &kp F8       &kp F9      &kp F10          &kp F11
&trans          &trans      &mkp LCLK  &mkp MCLK    &mkp RCLK  &mkp MB4                &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &bootloader  &mkp LCLK  &mkp MCLK    &mkp RCLK   &kp PRINTSCREEN  &kp F12
&trans          &sys_reset  &trans     &bootloader  &trans     &mkp MB5  &kp C_MUTE                    &mmv MOVE_DOWN                   &trans       &trans     &bootloader  &sys_reset  &kp SCROLLLOCK   &kp PAUSE_BREAK
                                       &trans       &trans     &trans                                                                   &trans       &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };
};
